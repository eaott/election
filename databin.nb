(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    189687,       4705]
NotebookOptionsPosition[    187430,       4626]
NotebookOutlinePosition[    187781,       4642]
CellTagsIndexPosition[    187738,       4639]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"For", " ", "Exporting"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bin", "=", 
     RowBox[{"Databin", "[", "\"\<66W7CW2x\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Take", " ", "the", " ", "arbitrary", " ", "number", " ", "stored", " ", 
      "and", " ", "convert", " ", "it", " ", "to", " ", "a", " ", 
      "DaetObject"}], ",", " ", 
     RowBox[{"then", " ", "a", " ", "string"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"times", "=", 
     RowBox[{"Normal", "[", 
      RowBox[{"DateString", "/@", 
       RowBox[{"(", 
        RowBox[{"DateObject", "/@", 
         RowBox[{
          RowBox[{"Dataset", "[", "bin", "]"}], "[", 
          RowBox[{"All", ",", "\"\<Timestamp\>\""}], "]"}]}], ")"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Use", " ", "the", " ", "names", " ", "from", " ", "the", " ", "last", 
     " ", "row", " ", "to", " ", "be", " ", "sure", " ", "to", " ", "have", 
     " ", "them", " ", "all"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"names", "=", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Keys", "[", 
         RowBox[{
          RowBox[{"Dataset", "[", "bin", "]"}], "[", 
          RowBox[{"Length", "[", 
           RowBox[{"Dataset", "[", "bin", "]"}], "]"}], "]"}], "]"}], "//", 
        "Normal"}], ",", 
       RowBox[{
        RowBox[{"StringContainsQ", "[", 
         RowBox[{"#", ",", "\"\<(\>\""}], "]"}], "&"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "data", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"names", "/.", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Dataset", "[", "bin", "]"}], "[", 
          RowBox[{"All", ",", "names"}], "]"}], "//", "Normal"}], ")"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dayTimes", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"AbsoluteTime", "[", "#", "]"}], "-", 
           RowBox[{"AbsoluteTime", "[", 
            RowBox[{"times", "[", 
             RowBox[{"[", 
              RowBox[{"Length", "[", "times", "]"}], "]"}], "]"}], "]"}]}], 
          ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"3600", "*", "24"}], ")"}]}], "]"}], "&"}], "/@", 
      "times"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "This", " ", "may", " ", "not", " ", "work", " ", "when", " ", "a", " ", 
      "new", " ", "candidate", " ", "is", " ", "added", " ", "now"}], "..."}],
     " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InvalidNum", "=", 
     RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "emptyData", "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"emptyData", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
          "Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"Or", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{"data", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], "]"}], "<", "i"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"StringLength", "[", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "i"}], "]"}], "]"}], "]"}], "]"}], 
                 "\[Equal]", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
              "InvalidNum", ",", 
              RowBox[{"data", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "i"}], "]"}], "]"}]}], "]"}], 
            "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "names", "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"This", " ", "one", " ", "will", " ", "be", " ", "better"}], 
     "..."}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MissingIndices", "[", "name_String", "]"}], ":=", 
    RowBox[{"Union", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{"MissingQ", "/@", 
         RowBox[{
          RowBox[{"Dataset", "[", "bin", "]"}], "[", 
          RowBox[{"All", ",", "name"}], "]"}]}], ",", "True"}], "]"}], "]"}], 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lastNamesWithParty", "=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "split", "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"split", "=", 
            RowBox[{"StringSplit", "[", "#", "]"}]}], ";", 
           RowBox[{"StringJoin", "[", 
            RowBox[{
             RowBox[{"split", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\"\< \>\"", ",", 
             RowBox[{"split", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ")"}], "&"}], "/@", 
        "names"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lastNamesWithoutParty", "=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "split", "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"split", "=", 
            RowBox[{"StringSplit", "[", "#", "]"}]}], ";", 
           RowBox[{"split", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "&"}], "/@", "names"}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "A", " ", "function", " ", "that", " ", "finds", " ", "the", " ", 
     "indices", " ", "of", " ", "all", " ", "elements", " ", "of", " ", "a", 
     " ", "list", " ", "of", " ", "strings", " ", "that", " ", "contain", " ",
      "a", " ", "particular", " ", 
     RowBox[{"substring", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GetIndicesFromList", "[", 
     RowBox[{"list_List", ",", "str_String"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "vals", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"vals", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"list", ",", 
          RowBox[{
           RowBox[{"StringContainsQ", "[", 
            RowBox[{"#", ",", "str"}], "]"}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Union", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"list", ",", "#"}], "]"}], "&"}], "/@", "vals"}], "]"}], 
        "\[IndentingNewLine]", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Republican", " ", "and", " ", "Democrat", " ", 
     RowBox[{"indices", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"reps", "=", 
     RowBox[{"GetIndicesFromList", "[", 
      RowBox[{"names", ",", "\"\<(R)\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dems", "=", 
     RowBox[{"GetIndicesFromList", "[", 
      RowBox[{"names", ",", "\"\<(D)\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "convert", " ", "a", " ", "data", " ", "set", " ", "where", " ", "each", 
     " ", "row", " ", "of", " ", "data", " ", "was", " ", "taken", " ", "at", 
     " ", "the", " ", "same", " ", "time"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ConvertToTimes", "[", 
     RowBox[{"data_List", ",", "times_List"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "data", "]"}], "\[NotEqual]", 
       RowBox[{"Length", "[", "times", "]"}]}], ",", 
      RowBox[{"Message", "[", 
       RowBox[{"ConvertToTimes", "::", "illegal"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"TimeSeries", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"times", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "times", "]"}]}], "}"}]}], "]"}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"data", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"absoluteDiffData", "=", 
     RowBox[{"Differences", "[", "data", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"percentDiffData", "=", 
     RowBox[{
      RowBox[{"absoluteDiffData", "/", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{
           RowBox[{"Length", "[", "data", "]"}], "-", "1"}]}], "]"}], "]"}]}],
       "//", "N"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"titles", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Total Likes\>\"", ",", "\"\<Overnight Change (Absolute)\>\"", ",", 
       "\"\<Overnight Change (Percentage)\>\""}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pieTitles", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Total Likes (#)\>\"", ",", "\"\<Total Likes (%)\>\"", ",", 
       "\"\<Overnight Change (#)\>\"", ",", "\"\<Overnight Change (%)\>\""}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"findIndex", "[", "candidate_String", "]"}], ":=", 
    RowBox[{
     RowBox[{"Position", "[", 
      RowBox[{"names", ",", 
       RowBox[{"_String", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"StringContainsQ", "[", 
           RowBox[{"#", ",", "candidate"}], "]"}], "&"}], ")"}]}]}], "]"}], 
     "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"graphFn", "[", 
     RowBox[{
     "option_Integer", ",", "selection_List", ",", "scale_Integer", ",", 
      RowBox[{"customStyle_List:", 
       RowBox[{"{", 
        RowBox[{
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[0., 0.0016329999999999956`, 0.565225], 
               RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             
             FrameStyle->RGBColor[
              0., 0.0010886666666666638`, 0.3768166666666667],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[0., 0.0016329999999999956, 0.565225]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[0., 0.0016329999999999956`, 0.565225]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[0., 0.0016329999999999956`, 0.565225],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[0., 0.07322799999999996, 0.848096], 
               RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0., 0.04881866666666664, 0.5653973333333333],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[0., 0.07322799999999996, 0.848096]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[0., 0.07322799999999996, 0.848096]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[0., 0.07322799999999996, 0.848096],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[0., 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0., 0.4, 0.4],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[0., 0.6, 0.6]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[0., 0.6, 0.6]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[0., 0.6, 0.6],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[0.04072600000000004, 0.38550399999999996`, 0.533684], 
               RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             
             FrameStyle->RGBColor[
              0.027150666666666694`, 0.25700266666666666`, 0.3557893333333334],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[0.04072600000000004, 0.38550399999999996, 0.533684]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[0.04072600000000004, 0.38550399999999996`, 0.533684]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[0.04072600000000004, 0.38550399999999996`, 0.533684],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[0.09955000000000003, 0.9795987, 0.9698177], 
               RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             
             FrameStyle->RGBColor[
              0.06636666666666668, 0.6530658, 0.6465451333333334],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[0.09955000000000003, 0.9795987, 0.9698177]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[0.09955000000000003, 0.9795987, 0.9698177]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[0.09955000000000003, 0.9795987, 0.9698177],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[0.17006200000000005`, 0.27484600000000003`, 0.], 
               RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.1133746666666667, 0.1832306666666667, 0.],
             
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[0.17006200000000005, 0.27484600000000003, 0.]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[0.17006200000000005`, 0.27484600000000003`, 0.]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[0.17006200000000005`, 0.27484600000000003`, 0.],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[0.20956699999999995`, 0.549706, 0.], 
               RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.1397113333333333, 0.3664706666666667, 0.],
             
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[0.20956699999999995, 0.549706, 0.]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[0.20956699999999995`, 0.549706, 0.]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[0.20956699999999995`, 0.549706, 0.],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[0.346715, 0.587594, 0.244526], 
               RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             
             FrameStyle->RGBColor[
              0.23114333333333334`, 0.3917293333333333, 0.16301733333333335`],
             
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[0.346715, 0.587594, 0.244526]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[0.346715, 0.587594, 0.244526]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[0.346715, 0.587594, 0.244526],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[0.4, 0.8, 1], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             
             FrameStyle->RGBColor[
              0.2666666666666667, 0.5333333333333334, 0.6666666666666666],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[0.4, 0.8, 1]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[0.4, 0.8, 1]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[0.4, 0.8, 1],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[0.436362, 0.393744, 0.06414900000000001], 
               RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             
             FrameStyle->RGBColor[
              0.29090800000000006`, 0.262496, 0.04276600000000001],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[0.436362, 0.393744, 0.06414900000000001]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[0.436362, 0.393744, 0.06414900000000001]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[0.436362, 0.393744, 0.06414900000000001],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[0.45412399999999997`, 0., 0.441245], 
               RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             
             FrameStyle->RGBColor[
              0.3027493333333333, 0., 0.29416333333333333`],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[0.45412399999999997, 0., 0.441245]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[0.45412399999999997`, 0., 0.441245]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[0.45412399999999997`, 0., 0.441245],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[0.501961, 0, 0.25098], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.3346406666666667, 0., 0.16732],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[0.501961, 0, 0.25098]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[0.501961, 0, 0.25098]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[0.501961, 0, 0.25098],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[0.563638, 0.606256, 0.935851], 
               RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             
             FrameStyle->RGBColor[
              0.3757586666666667, 0.4041706666666667, 0.6239006666666667],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[0.563638, 0.606256, 0.935851]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[0.563638, 0.606256, 0.935851]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[0.563638, 0.606256, 0.935851],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[0.566842, 0.967407, 1], 
               RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             
             FrameStyle->RGBColor[
              0.37789466666666666`, 0.644938, 0.6666666666666666],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[0.566842, 0.967407, 1]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[0.566842, 0.967407, 1]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[0.566842, 0.967407, 1],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[0.630091, 0.148196, 0.579461], 
               RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             
             FrameStyle->RGBColor[
              0.42006066666666664`, 0.09879733333333333, 0.38630733333333334`],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[0.630091, 0.148196, 0.579461]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[0.630091, 0.148196, 0.579461]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[0.630091, 0.148196, 0.579461],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[0.698817, 0.873304, 0.295247], 
               RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             
             FrameStyle->RGBColor[
              0.465878, 0.5822026666666666, 0.19683133333333333`],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[0.698817, 0.873304, 0.295247]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[0.698817, 0.873304, 0.295247]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[0.698817, 0.873304, 0.295247],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[0.723598, 0.791043, 0.963806], 
               RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             
             FrameStyle->RGBColor[
              0.48239866666666664`, 0.5273620000000001, 0.6425373333333334],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[0.723598, 0.791043, 0.963806]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[0.723598, 0.791043, 0.963806]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[0.723598, 0.791043, 0.963806],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[0.7268939999999999, 0.45700799999999997`, 0.504417], 
               RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.48459599999999997`, 0.304672, 0.336278],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[0.7268939999999999, 0.45700799999999997, 0.504417]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[0.7268939999999999, 0.45700799999999997`, 0.504417]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[0.7268939999999999, 0.45700799999999997`, 0.504417],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[0.782803, 0.164904, 0.400458], 
               RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             FrameStyle->RGBColor[0.5218686666666668, 0.109936, 0.266972],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[0.782803, 0.164904, 0.400458]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[0.782803, 0.164904, 0.400458]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[0.782803, 0.164904, 0.400458],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[0.873304, 0.150484, 0.255131], 
               RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             
             FrameStyle->RGBColor[
              0.5822026666666666, 0.10032266666666667`, 0.17008733333333334`],
             
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[0.873304, 0.150484, 0.255131]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[0.873304, 0.150484, 0.255131]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[0.873304, 0.150484, 0.255131],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[0.927596, 0.725414, 0.204257], 
               RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             
             FrameStyle->RGBColor[
              0.6183973333333334, 0.48360933333333334`, 0.13617133333333334`],
             
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[0.927596, 0.725414, 0.204257]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[0.927596, 0.725414, 0.204257]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[0.927596, 0.725414, 0.204257],
          Editable->False,
          Selectable->False], ",", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0.998367, 0.434775], 
               RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             
             FrameStyle->RGBColor[
              0.6666666666666666, 0.665578, 0.28985000000000005`],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            "RGBColor[1, 0.998367, 0.434775]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[1, 0.998367, 0.434775]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0.998367, 0.434775],
          Editable->False,
          Selectable->False]}], "}"}]}], ",", 
      RowBox[{"plotRange_:", "All"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "labels", ",", "plotLabel", ",", "graph", ",", "graphTimes", ",", "fn",
         ",", "styles"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"labels", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "selection", "]"}], "\[Equal]", 
           RowBox[{"Length", "[", "names", "]"}]}], ",", "lastNamesWithParty",
           ",", "lastNamesWithoutParty"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"plotLabel", "=", 
        RowBox[{"titles", "[", 
         RowBox[{"[", "option", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"graph", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"option", "\[Equal]", "1"}], ",", "data", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"option", "\[Equal]", "2"}], ",", "absoluteDiffData", ",", 
            RowBox[{"percentDiffData", "*", "100"}]}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"graphTimes", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"option", "\[Equal]", "1"}], ",", "times", ",", 
          RowBox[{"times", "[", 
           RowBox[{"[", 
            RowBox[{"2", ";;"}], "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"fn", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"scale", "\[Equal]", "1"}], ",", "DateListPlot", ",", 
          "DateListLogPlot"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"styles", "=", "customStyle"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"fn", "[", 
        RowBox[{
         RowBox[{"ConvertToTimes", "[", 
          RowBox[{
           RowBox[{"graph", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "selection"}], "]"}], "]"}], ",", 
           "graphTimes"}], "]"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"labels", "[", 
           RowBox[{"[", "selection", "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotLabel", "\[Rule]", "plotLabel"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", "plotRange"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", "\[Rule]", "styles"}]}], "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pieFn", "[", 
     RowBox[{
     "option_Integer", ",", "timestamp_Integer", ",", "selection_List"}], 
     "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "labels", ",", "plotLabel", ",", "graph", ",", "graphTimes", ",", 
        "totalLikes", ",", "labelfn", ",", "ts"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"plotLabel", "=", 
        RowBox[{"pieTitles", "[", 
         RowBox[{"[", "option", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"graph", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"option", "\[LessEqual]", "2"}], ",", "data", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"option", "\[Equal]", "3"}], ",", "absoluteDiffData", ",", 
            RowBox[{"percentDiffData", "//", "N"}]}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"graphTimes", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"option", "\[LessEqual]", "2"}], ",", "times", ",", 
          RowBox[{"times", "[", 
           RowBox[{"[", 
            RowBox[{"2", ";;"}], "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"labels", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "selection", "]"}], "\[Equal]", 
           RowBox[{"Length", "[", "names", "]"}]}], ",", "lastNamesWithParty",
           ",", "lastNamesWithoutParty"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ts", "=", 
        RowBox[{"Min", "[", 
         RowBox[{"timestamp", ",", 
          RowBox[{"Length", "[", "graphTimes", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"totalLikes", "=", 
        RowBox[{"Total", "[", 
         RowBox[{"graph", "[", 
          RowBox[{"[", 
           RowBox[{"ts", ",", "selection"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"labelfn", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"option", "\[Equal]", "1"}], ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Placed", "[", 
             RowBox[{
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"NumberForm", "[", 
                  RowBox[{
                   RowBox[{"IntegerPart", "[", 
                    RowBox[{"#", "/", "1000"}], "]"}], ",", 
                   RowBox[{"DigitBlock", "\[Rule]", "3"}]}], "]"}], ",", 
                 "\"\<k\>\""}], "}"}], "]"}], ",", "\"\<RadialCenter\>\""}], 
             "]"}], "&"}], ")"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"option", "\[Equal]", "3"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"Row", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"IntegerPart", "[", "#", "]"}], ",", 
                    RowBox[{"DigitBlock", "\[Rule]", "3"}]}], "]"}], ",", 
                   "\"\<\>\""}], "}"}], "]"}], ",", "\"\<RadialCenter\>\""}], 
               "]"}], "&"}], ")"}], ",", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"option", "\[Equal]", "2"}], ",", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Placed", "[", 
                 RowBox[{
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{
                    RowBox[{"#", "/", "totalLikes"}], ",", "3"}], "]"}], "*", 
                    "100"}], ",", "\"\<%\>\""}], "}"}], "]"}], ",", 
                  "\"\<RadialCenter\>\""}], "]"}], "&"}], ")"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Placed", "[", 
                 RowBox[{
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{"#", ",", "3"}], "]"}], "*", "100"}], ",", 
                    "\"\<%\>\""}], "}"}], "]"}], ",", 
                  "\"\<RadialCenter\>\""}], "]"}], "&"}], ")"}]}], 
             "\[IndentingNewLine]", "]"}]}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"PieChart", "[", 
        RowBox[{
         RowBox[{"graph", "[", 
          RowBox[{"[", 
           RowBox[{"ts", ",", "selection"}], "]"}], "]"}], ",", 
         RowBox[{"ChartLabels", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{"labels", "[", 
             RowBox[{"[", "selection", "]"}], "]"}], ",", 
            "\"\<RadialCallout\>\""}], "]"}]}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"plotLabel", "<>", "\"\<\\n\>\"", "<>", 
           RowBox[{"graphTimes", "[", 
            RowBox[{"[", "ts", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"LabelingFunction", "\[Rule]", "labelfn"}]}], 
        "\[IndentingNewLine]", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tableFn", "[", 
     RowBox[{
     "sort_Integer", ",", "order_Integer", ",", "timestamp_Integer", ",", 
      "selection_List"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "labels", ",", "plotLabel", ",", "graph", ",", "tableData", ",", 
        "ordering"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"plotLabel", "=", 
        RowBox[{"titles", "[", 
         RowBox[{"[", "sort", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"graph", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"sort", "\[Equal]", "1"}], ",", "data", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"sort", "\[Equal]", "2"}], ",", "absoluteDiffData", ",", 
            RowBox[{"percentDiffData", "//", "N"}]}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"labels", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "selection", "]"}], "\[Equal]", 
           RowBox[{"Length", "[", "names", "]"}]}], ",", "lastNamesWithParty",
           ",", "lastNamesWithoutParty"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tableData", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"timestamp", "+", "1"}], ",", "i"}], "]"}], "]"}], ",", 
            RowBox[{"absoluteDiffData", "[", 
             RowBox[{"[", 
              RowBox[{"timestamp", ",", "i"}], "]"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"percentDiffData", "[", 
             RowBox[{"[", 
              RowBox[{"timestamp", ",", "i"}], "]"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ToString", "[", 
              RowBox[{
               RowBox[{"percentDiffData", "[", 
                RowBox[{"[", 
                 RowBox[{"timestamp", ",", "i"}], "]"}], "]"}], "*", "100"}], 
              "]"}], "<>", "\"\<%\>\""}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "selection"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ordering", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"sort", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Ordering", "[", 
           RowBox[{"labels", "[", 
            RowBox[{"[", "selection", "]"}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Ordering", "[", 
           RowBox[{"tableData", ",", "All", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#1", "[", 
               RowBox[{"[", "sort", "]"}], "]"}], ">", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "sort", "]"}], "]"}]}], "&"}]}], "]"}]}], "]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"ordering", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"order", "\[Equal]", "1"}], ",", "ordering", ",", 
          RowBox[{"Reverse", "[", "ordering", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Labeled", "[", 
        RowBox[{
         RowBox[{"TableForm", "[", 
          RowBox[{
           RowBox[{"tableData", "[", 
            RowBox[{"[", 
             RowBox[{"ordering", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
           
           RowBox[{"TableHeadings", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"labels", "[", 
               RowBox[{"[", 
                RowBox[{"selection", "[", 
                 RowBox[{"[", "ordering", "]"}], "]"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Total Likes\>\"", ",", 
                "\"\<Overnight Gains\\n(Absolute)\>\"", ",", 
                "\"\<Overnight Gains\\n(Percentage)\>\""}], "}"}]}], 
             "}"}]}]}], "]"}], ",", 
         RowBox[{"\"\<Likes as of \>\"", "<>", 
          RowBox[{"times", "[", 
           RowBox[{"[", 
            RowBox[{"timestamp", "+", "1"}], "]"}], "]"}], "<>", 
          "\"\<\\n\>\""}], ",", "Top"}], "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"NewCandidate", "[", 
     RowBox[{
     "names", ",", "times", ",", "data", ",", "\"\<like_data.csv\>\""}], 
     "]"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"FIXME", " ", ":", " ", 
     RowBox[{
     "Need", " ", "a", " ", "new", " ", "replacement", " ", "for", " ", "the",
       " ", 
      RowBox[{"NewCandidate", " ", "--"}], " ", "base", " ", "it", " ", "on", 
      " ", "the", " ", "MissingIndices", " ", 
      RowBox[{"function", "?"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.64734666261934*^9, 3.647346678306439*^9}, {
   3.647346737575715*^9, 3.6473467457985973`*^9}, 3.647346801392995*^9, {
   3.647346857537086*^9, 3.647346857814596*^9}, {3.6473469136743107`*^9, 
   3.647346949135808*^9}, 3.647346987216234*^9, {3.647347028060079*^9, 
   3.6473470282919207`*^9}, {3.6473470601910887`*^9, 3.6473470945025*^9}, {
   3.6473471898409357`*^9, 3.6473472213993807`*^9}, {3.647347267128084*^9, 
   3.647347280584846*^9}, {3.647347347081555*^9, 3.647347348974428*^9}, {
   3.6473474062830677`*^9, 3.647347412387258*^9}, {3.647347547357761*^9, 
   3.6473475751663427`*^9}, {3.647347623967095*^9, 3.64734762712613*^9}, {
   3.647348499134036*^9, 3.6473485070458384`*^9}, {3.647348847911212*^9, 
   3.647348870766334*^9}, {3.647349654431573*^9, 3.647349655720872*^9}, {
   3.647528143858591*^9, 3.64752816322254*^9}, {3.647541708036536*^9, 
   3.647541721541534*^9}, {3.647542061739205*^9, 3.647542140173358*^9}, {
   3.647542171633585*^9, 3.647542174870225*^9}, 3.647543291315613*^9, 
   3.647543389120885*^9, {3.6475543866930237`*^9, 3.6475544155008802`*^9}, 
   3.647554470436777*^9, 3.647870982191615*^9, {3.647871053299203*^9, 
   3.647871053617147*^9}, {3.648058887710773*^9, 3.648058902017819*^9}, {
   3.648392939573166*^9, 3.648392970156476*^9}, {3.6483931371440563`*^9, 
   3.648393155710544*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ToExpression", "::", "notstrbox"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Missing[\\(\\(\\\"KeyAbsent\\\", \\\"John \
Kasich (R)\\\"\\)\\)]\\)\[NoBreak] is not a string or a box. ToExpression can \
only interpret strings or boxes as Wolfram Language input. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ToExpression/notstrbox\\\", ButtonNote -> \
\\\"ToExpression::notstrbox\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.647942657315023*^9, 3.648041051562203*^9, 3.6480589063955812`*^9, 
   3.648386644194038*^9, 3.648392975063876*^9, 3.648393160518392*^9, {
   3.648912131071973*^9, 3.6489121356177464`*^9}, 3.648915443606516*^9, 
   3.648995675108626*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ToExpression", "::", "notstrbox"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Missing[\\(\\(\\\"KeyAbsent\\\", \\\"John \
Kasich (R)\\\"\\)\\)]\\)\[NoBreak] is not a string or a box. ToExpression can \
only interpret strings or boxes as Wolfram Language input. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ToExpression/notstrbox\\\", ButtonNote -> \
\\\"ToExpression::notstrbox\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.647942657315023*^9, 3.648041051562203*^9, 3.6480589063955812`*^9, 
   3.648386644194038*^9, 3.648392975063876*^9, 3.648393160518392*^9, {
   3.648912131071973*^9, 3.6489121356177464`*^9}, 3.648915443606516*^9, 
   3.648995675122787*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ToExpression", "::", "notstrbox"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Missing[\\(\\(\\\"KeyAbsent\\\", \\\"John \
Kasich (R)\\\"\\)\\)]\\)\[NoBreak] is not a string or a box. ToExpression can \
only interpret strings or boxes as Wolfram Language input. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ToExpression/notstrbox\\\", ButtonNote -> \
\\\"ToExpression::notstrbox\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.647942657315023*^9, 3.648041051562203*^9, 3.6480589063955812`*^9, 
   3.648386644194038*^9, 3.648392975063876*^9, 3.648393160518392*^9, {
   3.648912131071973*^9, 3.6489121356177464`*^9}, 3.648915443606516*^9, 
   3.6489956751325827`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ToExpression :: notstrbox\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.647942657315023*^9, 3.648041051562203*^9, 3.6480589063955812`*^9, 
   3.648386644194038*^9, 3.648392975063876*^9, 3.648393160518392*^9, {
   3.648912131071973*^9, 3.6489121356177464`*^9}, 3.648915443606516*^9, 
   3.648995675174107*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"graphFn", "[", 
    RowBox[{"option", ",", "selection", ",", "scale"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"option", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#", "\[Rule]", 
         RowBox[{"titles", "[", 
          RowBox[{"[", "#", "]"}], "]"}]}], ")"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "titles", "]"}], "]"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"selection", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", 
         RowBox[{"Length", "[", "names", "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", 
          RowBox[{"Length", "[", "names", "]"}]}], "]"}], "\[Rule]", " ", 
        "\"\<All\>\""}], ",", 
       RowBox[{"reps", "\[Rule]", "\"\<Republicans\>\""}], ",", 
       RowBox[{"dems", "\[Rule]", "\"\<Democrats\>\""}]}], "}"}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"scale", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[Rule]", "\"\<Normal\>\""}], ",", 
       RowBox[{"2", "->", "\"\<Log\>\""}]}], "}"}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`option$$ = 1, $CellContext`scale$$ = 
    1, $CellContext`selection$$ = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
    14, 15, 16, 17, 18, 19, 20, 21, 22}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`option$$], 1}, {
      1 -> "Total Likes", 2 -> "Overnight Change (Absolute)", 3 -> 
       "Overnight Change (Percentage)"}}, {{
       Hold[$CellContext`selection$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
        13, 14, 15, 16, 17, 18, 19, 20, 21, 
       22}}, {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22} -> 
       "All", {1, 2, 4, 5, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 21, 22} -> 
       "Republicans", {3, 6, 8, 13, 16, 20} -> "Democrats"}}, {{
       Hold[$CellContext`scale$$], 1}, {1 -> "Normal", 2 -> "Log"}}}, 
    Typeset`size$$ = {696., {113., 118.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`option$15526$$ = 
    False, $CellContext`selection$15527$$ = 
    False, $CellContext`scale$15528$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`option$$ = 1, $CellContext`scale$$ = 
        1, $CellContext`selection$$ = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 
         13, 14, 15, 16, 17, 18, 19, 20, 21, 22}}, "ControllerVariables" :> {
        Hold[$CellContext`option$$, $CellContext`option$15526$$, False], 
        Hold[$CellContext`selection$$, $CellContext`selection$15527$$, False], 
        Hold[$CellContext`scale$$, $CellContext`scale$15528$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`graphFn[$CellContext`option$$, \
$CellContext`selection$$, $CellContext`scale$$], 
      "Specifications" :> {{{$CellContext`option$$, 1}, {
         1 -> "Total Likes", 2 -> "Overnight Change (Absolute)", 3 -> 
          "Overnight Change (Percentage)"}}, {{$CellContext`selection$$, {1, 
          2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 
          21, 22}}, {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
           17, 18, 19, 20, 21, 22} -> 
          "All", {1, 2, 4, 5, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 21, 22} -> 
          "Republicans", {3, 6, 8, 13, 16, 20} -> 
          "Democrats"}}, {{$CellContext`scale$$, 1}, {
         1 -> "Normal", 2 -> "Log"}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{741., {181., 186.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6473489445033493`*^9, 3.6475259997914143`*^9, 3.6475268544909267`*^9, 
   3.6475288991125593`*^9, 3.647541243506692*^9, 3.647541726647511*^9, 
   3.647542068238018*^9, 3.647542099679941*^9, {3.647542163550611*^9, 
   3.647542181315835*^9}, 3.647543298438246*^9, 3.647543395878105*^9, {
   3.647554395124587*^9, 3.6475544220845327`*^9}, 3.647554479379595*^9, 
   3.647870927663373*^9, 3.647870987637114*^9, 3.647871062393502*^9, 
   3.647942665682499*^9, 3.648386653494326*^9, 3.6489121413556023`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"pieFn", "[", 
    RowBox[{"option", ",", "timestamp", ",", "selection"}], "]"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"option", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[Rule]", 
         RowBox[{"pieTitles", "[", 
          RowBox[{"[", "#", "]"}], "]"}]}], "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "pieTitles", "]"}], "]"}]}], ")"}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"timestamp", ",", "1", ",", 
     RowBox[{"Length", "[", "times", "]"}], ",", "1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"selection", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", 
         RowBox[{"Length", "[", "names", "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", 
          RowBox[{"Length", "[", "names", "]"}]}], "]"}], "\[Rule]", " ", 
        "\"\<All\>\""}], ",", 
       RowBox[{"reps", "\[Rule]", "\"\<Republicans\>\""}], ",", 
       RowBox[{"dems", "\[Rule]", "\"\<Democrats\>\""}]}], "}"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.647529325356999*^9, 3.64752932926943*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`option$$ = 1, $CellContext`selection$$ = {1,
     2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 
    22}, $CellContext`timestamp$$ = 48, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`option$$], 1}, {
      1 -> "Total Likes (#)", 2 -> "Total Likes (%)", 3 -> 
       "Overnight Change (#)", 4 -> "Overnight Change (%)"}}, {
      Hold[$CellContext`timestamp$$], 1, 48, 1}, {{
       Hold[$CellContext`selection$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
        13, 14, 15, 16, 17, 18, 19, 20, 21, 
       22}}, {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22} -> 
       "All", {1, 2, 4, 5, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 21, 22} -> 
       "Republicans", {3, 6, 8, 13, 16, 20} -> "Democrats"}}}, 
    Typeset`size$$ = {360., {194., 199.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`option$22762$$ = 
    False, $CellContext`timestamp$22763$$ = 
    0, $CellContext`selection$22764$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`option$$ = 
        1, $CellContext`selection$$ = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 
         13, 14, 15, 16, 17, 18, 19, 20, 21, 22}, $CellContext`timestamp$$ = 
        1}, "ControllerVariables" :> {
        Hold[$CellContext`option$$, $CellContext`option$22762$$, False], 
        Hold[$CellContext`timestamp$$, $CellContext`timestamp$22763$$, 0], 
        Hold[$CellContext`selection$$, $CellContext`selection$22764$$, 
         False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`pieFn[$CellContext`option$$, \
$CellContext`timestamp$$, $CellContext`selection$$], 
      "Specifications" :> {{{$CellContext`option$$, 1}, {
         1 -> "Total Likes (#)", 2 -> "Total Likes (%)", 3 -> 
          "Overnight Change (#)", 4 -> 
          "Overnight Change (%)"}}, {$CellContext`timestamp$$, 1, 48, 
         1}, {{$CellContext`selection$$, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
          12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 
          22}}, {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22} -> 
          "All", {1, 2, 4, 5, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 21, 22} -> 
          "Republicans", {3, 6, 8, 13, 16, 20} -> "Democrats"}}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{443., {263., 268.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.647348960919292*^9, 3.64752601200084*^9, 
  3.6475268618014593`*^9, 3.647529279190353*^9, 3.6475293297708282`*^9, 
  3.647870939249745*^9, 3.647942675559927*^9, 3.6483866564079237`*^9, 
  3.648995690771339*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{"%269", ",", 
   RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.647529206904537*^9, 3.647529218012127*^9}, {
  3.647529286585762*^9, 3.6475292867037582`*^9}, {3.647529359012706*^9, 
  3.64752935905099*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TagBox[
    ButtonBox[
     PaneSelectorBox[{
      False->"\<\"https://www.wolframcloud.com/objects/21f43504-e889-495c-\
a072-26d85c0eb321\"\>", True->
      StyleBox["\<\"https://www.wolframcloud.com/objects/21f43504-e889-495c-\
a072-26d85c0eb321\"\>", "HyperlinkActive"]}, Dynamic[
       CurrentValue["MouseOver"]],
      BaseStyle->{"Hyperlink"},
      FrameMargins->0,
      ImageSize->Automatic],
     BaseStyle->"Hyperlink",
     ButtonData->{
       URL[
       "https://www.wolframcloud.com/objects/21f43504-e889-495c-a072-\
26d85c0eb321"], None},
     ButtonNote->
      "https://www.wolframcloud.com/objects/21f43504-e889-495c-a072-\
26d85c0eb321"],
    Annotation[#, 
     "https://www.wolframcloud.com/objects/21f43504-e889-495c-a072-\
26d85c0eb321", "Hyperlink"]& ], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/objects/21f43504-e889-495c-a072-26d85c0eb321"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.647529220125362*^9, 3.647529289190084*^9, 
  3.647529361779814*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"tableFn", "[", 
    RowBox[{"sort", ",", "order", ",", "timestamp", ",", "selection"}], "]"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sort", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Union", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "\[Rule]", 
           RowBox[{"titles", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "titles", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0", "->", "\"\<Name\>\""}], "}"}]}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"order", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[Rule]", "\"\<Descending\>\""}], ",", 
       RowBox[{"2", "\[Rule]", "\"\<Ascending\>\""}]}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"timestamp", ",", "1", ",", 
     RowBox[{
      RowBox[{"Length", "[", "times", "]"}], "-", "1"}], ",", "1"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"selection", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"names", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "21"}], "]"}], "]"}], "]"}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"names", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "21"}], "]"}], "]"}], "]"}]}], "]"}], 
        "\[Rule]", " ", "\"\<All\>\""}], ",", 
       RowBox[{"reps", "\[Rule]", "\"\<Republicans\>\""}], ",", 
       RowBox[{"dems", "\[Rule]", "\"\<Democrats\>\""}]}], "}"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.647943375064146*^9, 3.647943384830147*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`order$$ = 1, $CellContext`selection$$ = {1, 
    2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 
    21}, $CellContext`sort$$ = 3, $CellContext`timestamp$$ = 47, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`sort$$], 1}, {
      0 -> "Name", 1 -> "Total Likes", 2 -> "Overnight Change (Absolute)", 3 -> 
       "Overnight Change (Percentage)"}}, {{
       Hold[$CellContext`order$$], 1}, {
      1 -> "Descending", 2 -> "Ascending"}}, {
      Hold[$CellContext`timestamp$$], 1, 47, 1}, {{
       Hold[$CellContext`selection$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
        13, 14, 15, 16, 17, 18, 19, 20, 
       21}}, {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21} -> 
       "All", {1, 2, 4, 5, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 21, 22} -> 
       "Republicans", {3, 6, 8, 13, 16, 20} -> "Democrats"}}}, 
    Typeset`size$$ = {465., {192., 234.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`sort$51317$$ = False, $CellContext`order$51318$$ = 
    False, $CellContext`timestamp$51319$$ = 
    0, $CellContext`selection$51320$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`order$$ = 
        1, $CellContext`selection$$ = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 
         13, 14, 15, 16, 17, 18, 19, 20, 21}, $CellContext`sort$$ = 
        1, $CellContext`timestamp$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`sort$$, $CellContext`sort$51317$$, False], 
        Hold[$CellContext`order$$, $CellContext`order$51318$$, False], 
        Hold[$CellContext`timestamp$$, $CellContext`timestamp$51319$$, 0], 
        Hold[$CellContext`selection$$, $CellContext`selection$51320$$, 
         False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`tableFn[$CellContext`sort$$, \
$CellContext`order$$, $CellContext`timestamp$$, $CellContext`selection$$], 
      "Specifications" :> {{{$CellContext`sort$$, 1}, {
         0 -> "Name", 1 -> "Total Likes", 2 -> "Overnight Change (Absolute)", 
          3 -> "Overnight Change (Percentage)"}}, {{$CellContext`order$$, 
          1}, {1 -> "Descending", 2 -> 
          "Ascending"}}, {$CellContext`timestamp$$, 1, 47, 
         1}, {{$CellContext`selection$$, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
          12, 13, 14, 15, 16, 17, 18, 19, 20, 
          21}}, {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21} -> 
          "All", {1, 2, 4, 5, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 21, 22} -> 
          "Republicans", {3, 6, 8, 13, 16, 20} -> "Democrats"}}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{510., {292., 297.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.647348989284741*^9, 3.6475260569974833`*^9, 
  3.647526899688246*^9, 3.6475294620515213`*^9, 3.6478710990200157`*^9, 
  3.647942714496621*^9, 3.6479433852625847`*^9, 3.648041059920354*^9, 
  3.6483866591903543`*^9, 3.648912203604615*^9, 3.648915444082535*^9, 
  3.648995717136477*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<table.png\>\"", ",", 
   RowBox[{"tableFn", "[", 
    RowBox[{"3", ",", "1", ",", "35", ",", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"Length", "[", "names", "]"}], "-", "1"}], "]"}]}], "]"}], ",", 
   RowBox[{"ImageResolution", "\[Rule]", "400"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.648392099499818*^9, 3.6483921592998867`*^9}}],

Cell[BoxData["\<\"table.png\"\>"], "Output",
 CellChangeTimes->{{3.648392136616428*^9, 3.6483921608046637`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{"%271", ",", 
   RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.647529464495981*^9, 3.647529473067608*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TagBox[
    ButtonBox[
     PaneSelectorBox[{
      False->"\<\"https://www.wolframcloud.com/objects/78b97c5e-99bb-4980-\
8acd-a463d0c927dd\"\>", True->
      StyleBox["\<\"https://www.wolframcloud.com/objects/78b97c5e-99bb-4980-\
8acd-a463d0c927dd\"\>", "HyperlinkActive"]}, Dynamic[
       CurrentValue["MouseOver"]],
      BaseStyle->{"Hyperlink"},
      FrameMargins->0,
      ImageSize->Automatic],
     BaseStyle->"Hyperlink",
     ButtonData->{
       URL[
       "https://www.wolframcloud.com/objects/78b97c5e-99bb-4980-8acd-\
a463d0c927dd"], None},
     ButtonNote->
      "https://www.wolframcloud.com/objects/78b97c5e-99bb-4980-8acd-\
a463d0c927dd"],
    Annotation[#, 
     "https://www.wolframcloud.com/objects/78b97c5e-99bb-4980-8acd-\
a463d0c927dd", "Hyperlink"]& ], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/objects/78b97c5e-99bb-4980-8acd-a463d0c927dd"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.647529479840263*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"DateListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"times", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", 
            RowBox[{"findIndex", "[", "\"\<Clinton\>\"", "]"}]}], "]"}], 
          "]"}], "-", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", 
            RowBox[{"findIndex", "[", "\"\<Sanders\>\"", "]"}]}], "]"}], 
          "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "35", ",", 
        RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Clinton's Lead over Sanders\>\""}]}],
    "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"FIXME", ":", " ", 
     RowBox[{"Make", " ", "this", " ", "based", " ", "on", " ", "time"}]}], 
    ",", " ", 
    RowBox[{"not", " ", 
     RowBox[{"index", " ", "--"}], " ", "some", " ", "days", " ", 
     RowBox[{"aren", "'"}], "t", " ", "at", " ", "the", " ", "same", " ", 
     "time"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"LinearModelFit", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"dayTimes", "[", 
           RowBox[{"[", 
            RowBox[{"35", ";;"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"35", ";;"}], ",", 
              RowBox[{"findIndex", "[", "\"\<Clinton\>\"", "]"}]}], "]"}], 
            "]"}], "-", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"35", ";;"}], ",", 
              RowBox[{"findIndex", "[", "\"\<Sanders\>\"", "]"}]}], "]"}], 
            "]"}]}]}], "}"}], "//", "Transpose"}], ",", 
       RowBox[{"{", "x", "}"}], ",", "x"}], "]"}], "[", "\"\<BestFit\>\"", 
     "]"}], "\[Equal]", "0"}], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.648387047944457*^9, 3.648387052927285*^9}, {
  3.648912193561558*^9, 3.64891219376861*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     LineBox[{{3.647852627*^9, 187844.}, {3.647894883*^9, 181168.}, {
      3.647981286*^9, 156861.}, {3.648067686*^9, 150857.}, {3.648154088*^9, 
      138254.}, {3.648240488*^9, 119274.}, {3.648326888*^9, 104881.}, {
      3.648413287*^9, 89390.}, {3.648499699*^9, 62233.}, {3.648586086*^9, 
      48363.}, {3.648672489*^9, 36382.}, {3.648758889*^9, 25592.}, {
      3.648845289*^9, 16791.}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.647852627*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->
   FrontEndValueCache[{{Automatic, Automatic}, {Charting`FindScaledTicks[
       (Charting`getDateTicks[Automatic, {Automatic}, 
        Map[DateList, {
          SlotSequence[1]}], None]& )[
        SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
       (ReplaceAll[
        Charting`getDateTicks[Automatic, {Automatic}, 
         Map[DateList, {
           SlotSequence[1]}], None], Blank[String] :> Spacer[{0, 0}]]& )[
        SlotSequence[1]], {Identity, Identity}]& }}, {{
     Automatic, Automatic}, {{{3.6481536*^9, 
        FormBox["\"Aug 10\"", TraditionalForm], {0.006666666666666666, 0.}}, {
       3.6487584*^9, 
        FormBox["\"Aug 17\"", TraditionalForm], {0.006666666666666666, 0.}}, {
       3.6493632*^9, 
        FormBox["\"Aug 24\"", TraditionalForm], {0.006666666666666666, 0.}}, {
       3.6478944*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.006666666666666666, 0.}}, {
       3.6479808*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.006666666666666666, 0.}}, {
       3.6480672*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.006666666666666666, 0.}}, {
       3.64824*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.006666666666666666, 0.}}, {
       3.6483264*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.006666666666666666, 0.}}, {
       3.6484128*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.006666666666666666, 0.}}, {
       3.6484992*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.006666666666666666, 0.}}, {
       3.6485856*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.006666666666666666, 0.}}, {
       3.648672*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.006666666666666666, 0.}}, {
       3.6488448*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.006666666666666666, 
        0.}}}, {{3.6481536*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.006666666666666666, 0.}}, {
       3.6487584*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.006666666666666666, 0.}}, {
       3.6493632*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.006666666666666666, 0.}}, {
       3.6478944*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.006666666666666666, 0.}}, {
       3.6479808*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.006666666666666666, 0.}}, {
       3.6480672*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.006666666666666666, 0.}}, {
       3.64824*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.006666666666666666, 0.}}, {
       3.6483264*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.006666666666666666, 0.}}, {
       3.6484128*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.006666666666666666, 0.}}, {
       3.6484992*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.006666666666666666, 0.}}, {
       3.6485856*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.006666666666666666, 0.}}, {
       3.648672*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.006666666666666666, 0.}}, {
       3.6488448*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.006666666666666666, 0.}}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox["\"Clinton's Lead over Sanders\"", TraditionalForm],
  PlotRange->{{3.647852627*^9, 3.648845289*^9}, {0, 187844.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{
  3.6473491554573927`*^9, 3.647942777015667*^9, 3.648386673529359*^9, 
   3.648387053448185*^9, {3.648912171773563*^9, 3.648912194036702*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "0.5757954571139637`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6473491554573927`*^9, 3.647942777015667*^9, 3.648386673529359*^9, 
   3.648387053448185*^9, {3.648912171773563*^9, 3.648912194073153*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"LinearModelFit", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"dayTimes", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"1", ";;"}], ",", 
              RowBox[{"findIndex", "[", "\"\<Clinton\>\"", "]"}]}], "]"}], 
            "]"}], "-", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"1", ";;"}], ",", 
              RowBox[{"findIndex", "[", "\"\<Sanders\>\"", "]"}]}], "]"}], 
            "]"}]}]}], "}"}], "//", "Transpose"}], ",", 
       RowBox[{"{", "x", "}"}], ",", "x"}], "]"}], "[", "\"\<BestFit\>\"", 
     "]"}], "\[Equal]", "0"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6483869970758266`*^9, 3.648387019585237*^9}, {
  3.648395426156536*^9, 3.648395432665349*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "42.95189813408527`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.648386999980714*^9, 3.648387019923814*^9}, 
   3.648395433174165*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dayTimes", ",", 
        RowBox[{
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"findIndex", "[", "\"\<Clinton\>\"", "]"}]}], "]"}], 
          "]"}], "-", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"findIndex", "[", "\"\<Sanders\>\"", "]"}]}], "]"}], 
          "]"}]}]}], "}"}], "//", "Transpose"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Actual Lead\>\"", "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Normal", "[", 
         RowBox[{"LinearModelFit", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"dayTimes", "[", 
               RowBox[{"[", ";;", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"data", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", 
                  RowBox[{"findIndex", "[", "\"\<Clinton\>\"", "]"}]}], "]"}],
                 "]"}], "-", 
               RowBox[{"data", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", 
                  RowBox[{"findIndex", "[", "\"\<Sanders\>\"", "]"}]}], "]"}],
                 "]"}]}]}], "}"}], "//", "Transpose"}], ",", 
           RowBox[{"{", "x", "}"}], ",", "x"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{"x", "\[Rule]", "t"}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Normal", "[", 
         RowBox[{"LinearModelFit", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"dayTimes", "[", 
               RowBox[{"[", 
                RowBox[{"35", ";;"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"data", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"35", ";;"}], ",", 
                  RowBox[{"findIndex", "[", "\"\<Clinton\>\"", "]"}]}], "]"}],
                 "]"}], "-", 
               RowBox[{"data", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"35", ";;"}], ",", 
                  RowBox[{"findIndex", "[", "\"\<Sanders\>\"", "]"}]}], "]"}],
                 "]"}]}]}], "}"}], "//", "Transpose"}], ",", 
           RowBox[{"{", "x", "}"}], ",", "x"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{"x", "\[Rule]", "t"}], "}"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", 
        RowBox[{"Length", "[", "data", "]"}]}], ",", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Fit over all data\>\"", ",", "\"\<Fit since first debate\>\""}], 
       "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Clinton's Lead over Sanders\>\""}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Day Difference to August 12\>\"", ",", 
      "\"\<Difference in Likes\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.648386922821954*^9, 3.648386928679977*^9}, {
  3.6483870366905823`*^9, 3.6483870397538652`*^9}, {3.648394191241645*^9, 
  3.648394240264943*^9}, {3.648394289865573*^9, 3.648394391028544*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQ3ZXuqsz4x/kAkMmw56KAo5TITg7mBghfYhqUzwDh
T1gBk3cC8zt2wOQh/DlA9dNvy6esqHcE8xfECzjOXC999/NxBzDfQ0TAcZ5o
L0uND4RfsYffsX520pUP/+3BfIM4fsfPpYur//23g9j/m89RIfL5KWYGCP/F
LD5HNle9QwwMtmB+Aief45m3/EYhJdZg/g4rXkfh811uTAwQ/gkmXsdfuy7a
/v9vCeZzTOdx5O2KaWFkgPBffOB2zLBKur/xvzmYrxDJDTUfwmc4zQVVbwbR
n80F9a8pxP5YGN8E4l5PLqh7jcH8FT4w/UZg/o8YLqj5hmD+hiAuxwO+hlk/
/uuD+Rfuc0LN04O434fT8cz13nc//2tDwnsOh6M6KAAZtCB8dg5oeKmD+QGr
2B2jjrXP42JQA/Nn9LNDzVOBhI81u+Ml2/+iTf8VIe59zgZ1nwKYn7GPzRHs
bwYZiP7rbI4ZwORx/4soJHzesTk2pszV5mcQAfMbZNkcTTSKBNkYBCDhqcrs
mB7wRImHgQMS31lMUPMYwPyCBwxQ/of94PQh99eBAQkIzP7pAAAOdrC+
          
          "]]}, {}}}, {}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVx38803kcwHH72sbGtu8e1gllGfqxfhCW5EferMivnItWOhTVXaup6IfL
NTJ1FXMV0o/telynLi2RExZ9Px5NdKM2e3RkyVFXN1P5dR460nV/vB7Px8tl
W3rcdszCwiL6c/8bOG9q8pNUiK6OeOuzi9iAX7n8NvWoEBUKSvfq5GwY4AYN
tGYL0cGsSZbb5z/OzdUWZQlROKkpRlvAhsfOVkpuhhC9w9e2O5xiQ8pcu9DV
O4TIz1PUelfGBpnj4sKjUUL0RJLdNJzFBi0n0eXjbCH616y5kZbGhs6OU3Nj
b4SiptOhp1UCNrj57iinQSjC0B4LBp0N3238oHvcE4IevKzMD+/DYV3AFp1J
HILeq3rtXlXhkKrflSgmhyAlvV5Qlo/DP/x16pBiQPWMnBRVAg4F/n2N7vMB
RVskX7q0EAfJ9LzIdCIY/c40GNZOsaAt1+sWMzYYde58cOwLJQuMkj7BIt1q
9MJE32QfxgKP8EeiKPJqNBCRs/7xCBMyK+JcnRYEoXsTuo1rSpiwfo83pU4U
iC5qD594G8QEx4Ya+czhABRrnmqL72fA+/1Xk79W+KNpk4qfmc+AzYWDYSd1
q1Alu7bmgQcDaj31XSmjfshXVhZj6LSFaz4sKcXVDz3kGnBOti380DzUER+y
EvGpplccZ1vIaPRLa9rui/K1S55pm21g3P4Fe/T8CvS6oXW8RmwDO6ZddnbW
C5DzWCBvC9MGJNBkkP7tgxLjbQ4J6uggHW89IZzjg+Sl1CHNVjrkeu5/+VuQ
Nyrj9e7nUOgwuyMjYTTdC/3aRXcpqaTBlVHOPmPRciTvsut/GksDr+PuBmON
JxLfjWhuH7eGO+OOF+I6PFD0/e62caU19L9bZBTiyxCVHTLwHKwhoOJNpH7v
EqQpwFwnBq2gAmSRBc/4KOvNcF5LiRV8GEy+qOQuQuRC9cQGPyvIjB+0j8xb
gEoTjT/OekkFnb7mVYzGHX3M7AoozaeCiLXkzyGeGxLX8fHwZVQYW5i3q+Ek
Dz3pvmlZ1U2B9A0Owt6OeYi2xprWfYQCy441lq1Idkbreu4JlrtTIESqCdva
64hS1BGZEa1kOOJzimMS26PdWVYGBzEZbHbfCioXcJB0q9Mmx1lkSGqNscLV
OPqmmD7SU2cJeMSlzUljdLRxOLaqPcUSbh/gDCScI6PAxS1FmTaWcENvF73p
yylisoqT+7wSA8UxU6lKP0Sok+9dOCDCIKHxrHl70hBRaxC0jyVgwJzwD+aa
zURVWNXMvngMcr6Vm86QzcR1j/JUSRwGabHeAYd8TUTxJ/nSnVEY8J2/7wfF
X4Tkp23NomAMdme4iCr1zwleH83kvxCDF68zSC5mI+H8lcxJPR+D9ZsfVpwj
GwmH1pnole4YeIH442HfZwTr9tgdHx4Gk8zan0MVT4npo73ZS+dgQI8/01Ot
bye6nKtxLo7BW/8VS8+TtUTn2cWhCiYGOp5Rmu37iOigXjvgxMCgdNjNPUzR
QmjeXeyxp2Owdva+vnp9I1F9X/YLTsbA9rValufbQKi8Pv0hxzAw1JD5MYpa
4vq1LBqDhAGh9DQ91KsIpVwioc2QIGqVxnuLopy4gJmunJgmQfXN29MD+stE
8cFUA2WKBCUtt1ydOguIosFeiuwDCdqaR2yldqr7p5NEK7FJEvwHxpg6Fg==

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAPSD7+P9/RMDPtLBv36slQRCgnO1j
fkTAfnfnamyqJUHiHz7ix3xEwC06Hmb5qCVBhh+By495RMCKv4tcE6YlQc4e
B54fc0TARMpmSUegJUFgHRNDP2ZEwLvfHCOvlCVBhBorjX5MRMCnConWfn0l
QcsUWyH9GETAf2BhPR5PJUHSzYodUKlDwLroyrmP6iRBJDdmpQlBQ8AEgOEf
q4wkQXpX+dDO2kLAhBWpBp4wJEFJPFzQ6WtCwJCHKZzDzCNBY9FqW2sEQsCr
CFcbk28jQfUqSbpClEHAT2Y9SZUKI0GMO9+8JSZBwCzC1PdupyJBbvwgS2+/
QMAXLRmQ8koiQciBMq0OUEDAjHQW16jmIUHbbt81KdA/wBDLwAcJiSFBL0jJ
WEwEP8DLHxy5QC0hQXSqUiMbJz7AElEwGavJIEFPbTMFt1g9wGaR8WK/bCBB
Grmzjv54PMBFrmtbBgggQe9yo19dnTvAuZItqUlKH0FajepHidA6wAPn3W7a
kR5BtTDR12DyOcBj9P+R0MkdQaY0D38FIznA3x98iBoPHUGIwezNVUI4wHAE
atzJRBxBc7w5ZL1lN8Bx5bkxKH4bQfQX3hHylzbAjuRjWtrEGkFm/CFn0rg1
wMGcf+Dx+xlBbkG903/oNMAQc/U5XUAZQX/0x4dEHDTAzkXNlHeIGEGBMHLj
tD4zwKLRFk33wBdBGM1zVvJvMsCSe7rYygYXQaDyFHHbjzHAl97PwQM9FkEy
hiXT27MwwAw+R6zrdhVBsvQamVLNL8CduxhqJ74UQeHuKdtEEC7AQ/Jbhcj1
E0E8qudL0XAswAZH+XO9OhNBqkGES4zZKsA4mPhjYYMSQfnqX5qeHynAgKJp
sWq8EUF0VeoXS4MnwOPKNNLHAhFB0NGz5E7EJcBdrHFQijkQQVgPLODsIiTA
5FcRREH7DkHzKINquYkiwO5PA+rLig1Bb1QZRN3NIMAkuthKIfsLQS6CvJg2
Xx7AkmBiUh6GCkFCf8RHYd0awCx5zxTm8QhBezSKFOlrF8CkigDaC2UHQQts
rT6lNRTAVNjlRdnyBUFex04HELoQwDCYrmxxYQRBEEqbWl7zCsBElCs6seoC
Qa91FOJWkwTAN4lsCk97AUGp0RNNWVH7v6rgIStv2f9AnYLplqzR7L9WJ9OO
j/H8QFa8kutlXuy/w+LvAZbk/EAO9jtAH+vrvzCeDHWc1/xAgGmO6ZEE678J
FUZbqb38QGRQMzx3N+m/uwK5J8OJ/EAqHn3hQZ3lvyDensD2IfxAbHMhWK7R
3L/qlGryXVL7QN7mcwEh69u/VlCHZWRF+0BPWsaqkwTbv8MLpNhqOPtAMkFr
/Xg32b+cgt2+dx77QPgOtaJDndW/TnBQi5Hq+kAKVZHasdHMv7NLNiTFgvpA
7Ts2LZcEy78gB1OXy3X6QNAi2398N8m/jMJvCtJo+kCW8CQlR53Fv2U5qfDe
TvpARhhx37jRvL8YJxy9+Br6QAzmuoSDN7m/hOI4MP8N+kDTswQqTp21v/Gd
VaMFAfpAv54w6cbRrL/KFI+JEuf5QEw6xDNcnaW/N9Cr/Bja+UCxq6/84tGc
v6OLyG8fzflAlcWtIxvSjL8QR+XiJcD5QMjB8Qx/E6y+fQICViyz+UDe31Ha

         "]]}}}}, {
    PlotLabel -> FormBox["\"Clinton's Lead over Sanders\"", TraditionalForm], 
     FrameLabel -> {
       FormBox["\"Day Difference to August 12\"", TraditionalForm], 
       FormBox["\"Difference in Likes\"", TraditionalForm]}, Frame -> True, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-39.968784722222225`, 0}, {0, 275567.}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{-39.968784722222225`, 0}, {0, 275567.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Actual Lead\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Fit over all data\"", "\"Fit since first debate\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.647349191813353*^9, 3.6479427848362093`*^9, 3.648386682867543*^9, 
   3.6483869294569407`*^9, 3.648387040846401*^9, 3.6483942223776903`*^9, {
   3.648394291578884*^9, 3.6483943916428347`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ")"}], "/", 
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "//", "N"}], ")"}], "&"}], "/@", 
  RowBox[{"percentDiffData", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"findIndex", "[", "\"\<Sanders\>\"", "]"}], ",", 
       RowBox[{"findIndex", "[", "\"\<Clinton\>\"", "]"}]}], "}"}]}], "]"}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.815612898138206`", ",", "1.1326825956132751`", ",", 
   "1.1368060647953226`", ",", "1.9721258636284111`", ",", 
   "2.5946328680341844`", ",", "2.6541833405065596`", ",", 
   "2.684329531970429`", ",", "3.003633840160796`", ",", 
   "2.8222121210094957`", ",", "2.657276119706925`", ",", 
   "2.809259004458817`", ",", "2.0577654494168853`", ",", 
   "2.1643937663142983`", ",", "2.4542436753249484`", ",", 
   "2.9697470336531326`", ",", "3.3893196771309273`", ",", 
   "3.090568022933897`", ",", "2.343301255125328`", ",", 
   "1.3705323295626257`", ",", "1.490493487177307`", ",", 
   "1.2024053267445918`", ",", "1.044476506350718`", ",", 
   "1.3750857955078566`", ",", "2.8952688769718664`", ",", 
   "3.946491228056363`", ",", "3.5247428929286033`", ",", 
   "3.21271992171035`"}], "}"}]], "Output",
 CellChangeTimes->{3.647349193958857*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Quiet", "[", 
    RowBox[{
     RowBox[{"Quiet", "[", "\[IndentingNewLine]", 
      RowBox[{"Labeled", "[", 
       RowBox[{
        RowBox[{"TableForm", "[", 
         RowBox[{"Sort", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"lastNamesWithParty", "[", 
                RowBox[{"[", "#", "]"}], "]"}], ",", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"LinearModelFit", "[", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"dayTimes", "[", 
                    RowBox[{"[", 
                    RowBox[{"35", ";;"}], "]"}], "]"}], ",", 
                    RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"35", ";;"}], ",", "#"}], "]"}], "]"}]}], "}"}], "//",
                     "Transpose"}], ")"}], ",", 
                    RowBox[{"{", "x", "}"}], ",", "x"}], "]"}], "[", 
                  "\"\<BestFit\>\"", "]"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{"x", "\[Rule]", "time"}], "}"}]}], ")"}]}], "}"}], 
             "&"}], "/@", 
            RowBox[{"(", 
             RowBox[{"findIndex", "/@", 
              RowBox[{"lastNamesWithoutParty", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", "21"}], "]"}], "]"}]}], ")"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ">", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Estimated Total Likes from Linear Fit\\n\>\"", "<>", 
         RowBox[{"DatePlus", "[", 
          RowBox[{
           RowBox[{"times", "[", 
            RowBox[{"[", 
             RowBox[{"Length", "[", "times", "]"}], "]"}], "]"}], ",", 
           "time"}], "]"}]}], "\[IndentingNewLine]", ",", "Top"}], "]"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Part", "::", "pkspec1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"time", ",", "1", ",", 
     RowBox[{"QuantityMagnitude", "[", 
      RowBox[{"DateDifference", "[", 
       RowBox[{"Today", ",", 
        RowBox[{"DateObject", "[", 
         RowBox[{"{", 
          RowBox[{"2016", ",", "11", ",", "8"}], "}"}], "]"}]}], "]"}], "]"}],
      ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.647529640268147*^9, {3.647529793105838*^9, 3.647529796148065*^9}, {
   3.647529847277812*^9, 3.647529852925145*^9}, {3.647529948990922*^9, 
   3.647529988459008*^9}, {3.647530044296659*^9, 3.647530053270754*^9}, {
   3.64753014298748*^9, 3.6475301803210573`*^9}, {3.647530210792613*^9, 
   3.647530267728672*^9}, {3.64794283360137*^9, 3.6479428374262743`*^9}, {
   3.648041125504613*^9, 3.648041163396483*^9}, {3.6483870633113117`*^9, 
   3.648387064887127*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`time$$ = 448, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`time$$], 1, 448, 1}}, Typeset`size$$ = {
    289., {185., 226.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`time$33985$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`time$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`time$$, $CellContext`time$33985$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Quiet[
        Quiet[
         Labeled[
          TableForm[
           Sort[
            Map[{
              Part[$CellContext`lastNamesWithParty, #], 
              ReplaceAll[
               LinearModelFit[
                Transpose[{
                  Part[$CellContext`dayTimes, 
                   Span[35, All]], 
                  Part[Streaming`LazyList`Testing`data, 
                   Span[35, All], #]}], {$CellContext`x}, $CellContext`x][
               "BestFit"], {$CellContext`x -> $CellContext`time$$}]}& , 
             Map[$CellContext`findIndex, 
              Part[$CellContext`lastNamesWithoutParty, 
               Span[1, 21]]]], Part[#, 2] > Part[#2, 2]& ]], 
          StringJoin["Estimated Total Likes from Linear Fit\n", 
           DatePlus[
            Part[$CellContext`times, 
             Length[$CellContext`times]], $CellContext`time$$]], Top]], {
         MessageName[Part, "pkspec1"]}], 
      "Specifications" :> {{$CellContext`time$$, 1, 448, 1}}, "Options" :> {},
       "DefaultOptions" :> {}],
     ImageSizeCache->{334., {247., 252.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.647349209160595*^9, 3.647526045137965*^9, 3.647529547252674*^9, 
   3.64752964070273*^9, 3.6475298010214367`*^9, 3.647529854048643*^9, 
   3.6475299904328623`*^9, 3.647530055636451*^9, {3.647530156443091*^9, 
   3.647530180802894*^9}, 3.6475302319917803`*^9, 3.647530269815547*^9, 
   3.647942796454049*^9, 3.6479428378596287`*^9, {3.648041128881054*^9, 
   3.648041163941403*^9}, 3.648386690157043*^9, 3.6483870703629427`*^9, 
   3.6489123326257143`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{"%294", ",", 
   RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.647529856096304*^9, 3.64752986524024*^9}, {
  3.647529995003471*^9, 3.647529995342019*^9}, {3.64753005961523*^9, 
  3.647530059717208*^9}, {3.647530194326159*^9, 3.6475301947885523`*^9}, {
  3.6475302359702473`*^9, 3.647530236065584*^9}, {3.647530277231599*^9, 
  3.647530277318989*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TagBox[
    ButtonBox[
     PaneSelectorBox[{
      False->"\<\"https://www.wolframcloud.com/objects/667499db-9a1e-4dc7-\
8a07-6b247924622b\"\>", True->
      StyleBox["\<\"https://www.wolframcloud.com/objects/667499db-9a1e-4dc7-\
8a07-6b247924622b\"\>", "HyperlinkActive"]}, Dynamic[
       CurrentValue["MouseOver"]],
      BaseStyle->{"Hyperlink"},
      FrameMargins->0,
      ImageSize->Automatic],
     BaseStyle->"Hyperlink",
     ButtonData->{
       URL[
       "https://www.wolframcloud.com/objects/667499db-9a1e-4dc7-8a07-\
6b247924622b"], None},
     ButtonNote->
      "https://www.wolframcloud.com/objects/667499db-9a1e-4dc7-8a07-\
6b247924622b"],
    Annotation[#, 
     "https://www.wolframcloud.com/objects/667499db-9a1e-4dc7-8a07-\
6b247924622b", "Hyperlink"]& ], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/objects/667499db-9a1e-4dc7-8a07-6b247924622b"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.647529867395699*^9, 3.647529997083705*^9, 
  3.647530061220318*^9, 3.647530197942729*^9, 3.647530237651165*^9, 
  3.647530278937625*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"data2", "=", 
     RowBox[{"Import", "[", "\"\<like_data.csv\>\"", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"bin", "=", 
     RowBox[{"Databin", "[", "\"\<66W7CW2x\>\"", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"names", "=", 
     RowBox[{"data2", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"data2", "=", 
     RowBox[{"data2", "[", 
      RowBox[{"[", 
       RowBox[{"2", ";;"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"InvalidNum", "=", 
     RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"emptyData", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Or", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"data2", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "]"}], "<", "i"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"StringLength", "[", 
               RowBox[{"ToString", "[", 
                RowBox[{"data2", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", "i"}], "]"}], "]"}], "]"}], "]"}], 
              "\[Equal]", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
           "InvalidNum", ",", 
           RowBox[{"data2", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i"}], "]"}], "]"}]}], "]"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "names", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Length", "[", "data2", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"data2", "=", "emptyData"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Add", " ", "literally", " ", "everything"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "data2", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{"DatabinAdd", "[", 
         RowBox[{"bin", ",", 
          RowBox[{"Association", "[", 
           RowBox[{"MapThread", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#1", "\[Rule]", "#2"}], "&"}], ",", 
             RowBox[{"{", 
              RowBox[{"names", ",", 
               RowBox[{"data2", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", 
                  RowBox[{"1", ";;", 
                   RowBox[{"Length", "[", "names", "]"}]}]}], "]"}], "]"}]}], 
              "}"}]}], "]"}], "]"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
      
      RowBox[{"(*", "  ", 
       RowBox[{"THIS", " ", "IS", " ", "THE", " ", "IMPORTANT", " ", 
        RowBox[{"ONE", " ", "--"}], " ", "HOW", " ", "TO", " ", "ADD", " ", 
        "IN", " ", "CASE", " ", "OF", " ", "ERROR"}], "   ", "*)"}], 
      "\[IndentingNewLine]", "data2"}], "=", 
     RowBox[{"Import", "[", "\"\<like_data.csv\>\"", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"names", "=", 
     RowBox[{"data2", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"DatabinAdd", "[", 
       RowBox[{"bin", ",", 
        RowBox[{"Association", "[", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#1", "\[Rule]", "#2"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"names", ",", 
             RowBox[{"data2", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"Length", "[", "data2", "]"}], ",", 
                RowBox[{"1", ";;", 
                 RowBox[{"Length", "[", "names", "]"}]}]}], "]"}], "]"}]}], 
            "}"}]}], "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "times"}], "=", 
     RowBox[{"(", 
      RowBox[{"DateObject", "/@", 
       RowBox[{
        RowBox[{"Dataset", "[", "bin", "]"}], "[", 
        RowBox[{"All", ",", "\"\<Timestamp\>\""}], "]"}]}], ")"}]}], ";"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ResetTheDatabin", "[", "]"}], ":=", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "0"}], ",", 
      RowBox[{"i", "<", 
       RowBox[{"Length", "[", "data", "]"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{"DatabinRemove", "[", 
       RowBox[{"bin", ",", "1"}], "]"}]}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "data", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{"DatabinAdd", "[", 
      RowBox[{"bin", ",", 
       RowBox[{"Association", "[", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#1", "\[Rule]", "#2"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"names", ",", 
            RowBox[{"data", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}], "]"}]}], 
      "]"}]}], "]"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.647526826932612*^9, 3.647526838531187*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#", ",", 
        RowBox[{"ColorNegate", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"Flatten", "[", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ColorData", "[", "\"\<VisibleSpectrum\>\"", "]"}], "[", 
              RowBox[{"410", "+", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "/", "22"}], ")"}], "^", "1"}], "*", 
                RowBox[{"(", 
                 RowBox[{"720", "-", "410"}], ")"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "21", ",", "1"}], "}"}]}], "]"}], 
           ","}], "*)"}], 
         RowBox[{
          RowBox[{"ColorData", "[", 
           RowBox[{"60", ",", "\"\<ColorList\>\""}], "]"}], ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"54", ",", "\"\<ColorList\>\""}], "]"}]}], "}"}]}], "]"}], 
      "]"}]}], "]"}], ",", "22"}], "]"}]], "Input",
 CellChangeTimes->{{3.647555135727395*^9, 3.647555308760078*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.927596, 0.725414, 0.204257], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6183973333333334, 0.48360933333333334`, 0.13617133333333334`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.927596, 0.725414, 0.204257]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.927596, 0.725414, 0.204257]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.927596, 0.725414, 0.204257],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.4, 0.4],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 0.6, 0.6]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 0.6, 0.6]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0.6, 0.6],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.04072600000000004, 0.38550399999999996`, 0.533684], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.027150666666666694`, 0.25700266666666666`, 0.3557893333333334],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.04072600000000004, 0.38550399999999996, 0.533684]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.04072600000000004, 0.38550399999999996`, 0.533684]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.04072600000000004, 0.38550399999999996`, 0.533684],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.630091, 0.148196, 0.579461], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.42006066666666664`, 0.09879733333333333, 0.38630733333333334`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.630091, 0.148196, 0.579461]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.630091, 0.148196, 0.579461]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.630091, 0.148196, 0.579461],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.436362, 0.393744, 0.06414900000000001], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.29090800000000006`, 0.262496, 0.04276600000000001],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.436362, 0.393744, 0.06414900000000001]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.436362, 0.393744, 0.06414900000000001]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.436362, 0.393744, 0.06414900000000001],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.17006200000000005`, 0.27484600000000003`, 0.], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.1133746666666667, 0.1832306666666667, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.17006200000000005, 0.27484600000000003, 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.17006200000000005`, 0.27484600000000003`, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.17006200000000005`, 0.27484600000000003`, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.501961, 0, 0.25098], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.3346406666666667, 0., 0.16732],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.501961, 0, 0.25098]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.501961, 0, 0.25098]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.501961, 0, 0.25098],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.698817, 0.873304, 0.295247], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.465878, 0.5822026666666666, 0.19683133333333333`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.698817, 0.873304, 0.295247]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.698817, 0.873304, 0.295247]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.698817, 0.873304, 0.295247],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.09955000000000003, 0.9795987, 0.9698177], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.06636666666666668, 0.6530658, 0.6465451333333334],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.09955000000000003, 0.9795987, 0.9698177]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.09955000000000003, 0.9795987, 0.9698177]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.09955000000000003, 0.9795987, 0.9698177],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.723598, 0.791043, 0.963806], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.48239866666666664`, 0.5273620000000001, 0.6425373333333334],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.723598, 0.791043, 0.963806]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.723598, 0.791043, 0.963806]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.723598, 0.791043, 0.963806],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.998367, 0.434775], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6666666666666666, 0.665578, 0.28985000000000005`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.998367, 0.434775]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1, 0.998367, 0.434775]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.998367, 0.434775],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.45412399999999997`, 0., 0.441245], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.3027493333333333, 0., 0.29416333333333333`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.45412399999999997, 0., 0.441245]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.45412399999999997`, 0., 0.441245]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.45412399999999997`, 0., 0.441245],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.07322799999999996, 0.848096], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.04881866666666664, 0.5653973333333333],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 0.07322799999999996, 0.848096]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0., 0.07322799999999996, 0.848096]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0.07322799999999996, 0.848096],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.873304, 0.150484, 0.255131], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.5822026666666666, 0.10032266666666667`, 0.17008733333333334`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.873304, 0.150484, 0.255131]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.873304, 0.150484, 0.255131]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.873304, 0.150484, 0.255131],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.0016329999999999956`, 0.565225], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.0010886666666666638`, 0.3768166666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 0.0016329999999999956, 0.565225]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0., 0.0016329999999999956`, 0.565225]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0.0016329999999999956`, 0.565225],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.346715, 0.587594, 0.244526], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.23114333333333334`, 0.3917293333333333, 0.16301733333333335`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.346715, 0.587594, 0.244526]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.346715, 0.587594, 0.244526]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.346715, 0.587594, 0.244526],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.7268939999999999, 0.45700799999999997`, 0.504417], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.48459599999999997`, 0.304672, 0.336278],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.7268939999999999, 0.45700799999999997, 0.504417]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.7268939999999999, 0.45700799999999997`, 0.504417]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.7268939999999999, 0.45700799999999997`, 0.504417],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.566842, 0.967407, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.37789466666666666`, 0.644938, 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.566842, 0.967407, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.566842, 0.967407, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.566842, 0.967407, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.563638, 0.606256, 0.935851], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.3757586666666667, 0.4041706666666667, 0.6239006666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.563638, 0.606256, 0.935851]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.563638, 0.606256, 0.935851]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.563638, 0.606256, 0.935851],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.4, 0.8, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.2666666666666667, 0.5333333333333334, 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.4, 0.8, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.4, 0.8, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.4, 0.8, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.782803, 0.164904, 0.400458], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.5218686666666668, 0.109936, 0.266972],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.782803, 0.164904, 0.400458]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.782803, 0.164904, 0.400458]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.782803, 0.164904, 0.400458],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.20956699999999995`, 0.549706, 0.], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.1397113333333333, 0.3664706666666667, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.20956699999999995, 0.549706, 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.20956699999999995`, 0.549706, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.20956699999999995`, 0.549706, 0.],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.647555177348468*^9, 3.647555311119172*^9}, {
   3.6478709626690683`*^9, 3.647870967065012*^9}, 3.647871001300911*^9, {
   3.6478710353945007`*^9, 3.647871039535451*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6483990928740892`*^9, 3.64839910986596*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", "m", "}"}], ",", 
   RowBox[{
    RowBox[{"m", "=", 
     RowBox[{"Sort", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{
            RowBox[{"100", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"data", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"Length", "[", "data", "]"}], ",", 
                   RowBox[{"findIndex", "[", "#", "]"}]}], "]"}], "]"}], "/", 
                
                RowBox[{"data", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", 
                   RowBox[{"findIndex", "[", "#", "]"}]}], "]"}], "]"}]}], 
               "-", "1"}], ")"}]}], "//", "N"}], ",", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"Length", "[", "data", "]"}], ",", 
              RowBox[{"findIndex", "[", "#", "]"}]}], "]"}], "]"}]}], "}"}], 
         "&"}], "/@", 
        RowBox[{"lastNamesWithParty", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "21"}], "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ">", 
         RowBox[{"#2", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"TableForm", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<+\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<%\>\""}], 
            ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
         RowBox[{"m", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}]}], ",", 
        RowBox[{"TableHeadings", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"m", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Percent Change\>\"", ",", "\"\<Total Likes\>\""}], 
            "}"}]}], "}"}]}]}], "]"}], ",", 
      "\"\<Percent change since July 3\>\"", ",", "Top"}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6483991213473043`*^9, 3.648399134694152*^9}, {
  3.648399191923175*^9, 3.648399196476265*^9}, {3.6483992413213387`*^9, 
  3.6483993334171333`*^9}, {3.648399391376431*^9, 3.648399439234653*^9}, {
  3.648399485409343*^9, 3.64839948724992*^9}, {3.648400371318165*^9, 
  3.6484003893240633`*^9}, {3.648400443713728*^9, 3.648400559728774*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    TagBox[
     GridBox[{{
        StyleBox["\[Null]", ShowStringCharacters -> False], 
        TagBox["\"Percent Change\"", HoldForm], 
        TagBox["\"Total Likes\"", HoldForm]}, {
        TagBox["\"Fiorina (R)\"", HoldForm], "\"+172.74%\"", "267182"}, {
        TagBox["\"Sanders (D)\"", HoldForm], "\"+60.2343%\"", "1157393"}, {
        TagBox["\"Trump (R)\"", HoldForm], "\"+56.4786%\"", "3166797"}, {
        TagBox["\"Carson (R)\"", HoldForm], "\"+43.7701%\"", "2345899"}, {
        TagBox["\"Webb (D)\"", HoldForm], "\"+24.1732%\"", "30225"}, {
        TagBox["\"Bush (R)\"", HoldForm], "\"+18.2433%\"", "248694"}, {
        TagBox["\"Clinton (D)\"", HoldForm], "\"+17.6679%\"", "1174184"}, {
        TagBox["\"Pataki (R)\"", HoldForm], "\"+13.0045%\"", "18283"}, {
        TagBox["\"Chafee (D)\"", HoldForm], "\"+11.3151%\"", "8854"}, {
        TagBox["\"Graham (R)\"", HoldForm], "\"+9.33443%\"", "129265"}, {
        TagBox["\"Cruz (R)\"", HoldForm], "\"+8.56737%\"", "1371701"}, {
        TagBox["\"Christie (R)\"", HoldForm], "\"+7.81206%\"", "118700"}, {
        TagBox["\"Rubio (R)\"", HoldForm], "\"+7.69479%\"", "973044"}, {
        TagBox["\"Jindal (R)\"", HoldForm], "\"+6.82522%\"", "276328"}, {
        TagBox["\"O'Malley (D)\"", HoldForm], "\"+5.0171%\"", "76443"}, {
        TagBox["\"Walker (R)\"", HoldForm], "\"+3.75096%\"", "292669"}, {
        TagBox["\"Huckabee (R)\"", HoldForm], "\"+3.07222%\"", "1825209"}, {
        TagBox["\"Paul (R)\"", HoldForm], "\"+1.61858%\"", "2059204"}, {
        TagBox["\"Perry (R)\"", HoldForm], "\"+0.945835%\"", "1209000"}, {
        TagBox["\"Santorum (R)\"", HoldForm], "\"+0.726985%\"", "264639"}, {
        TagBox["\"Biden (D)\"", HoldForm], "\"+0.573371%\"", "840375"}}, 
      RowSpacings -> 1, ColumnSpacings -> 3, RowAlignments -> Baseline, 
      ColumnAlignments -> Left, ColumnLines -> {1, False}, 
      RowLines -> {1, False}, ColumnAlignments -> Left], {
     OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{
        "Fiorina (R)", "Sanders (D)", "Trump (R)", "Carson (R)", "Webb (D)", 
         "Bush (R)", "Clinton (D)", "Pataki (R)", "Chafee (D)", "Graham (R)", 
         "Cruz (R)", "Christie (R)", "Rubio (R)", "Jindal (R)", 
         "O'Malley (D)", "Walker (R)", "Huckabee (R)", "Paul (R)", 
         "Perry (R)", "Santorum (R)", "Biden (D)"}, {
        "Percent Change", "Total Likes"}}]]],
   "\"Percent change since July 3\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.648400431452506*^9, 3.648400473422159*^9}, 
   3.6484005257053432`*^9, 3.648400560469699*^9, 3.648915817824957*^9}]
}, Open  ]]
},
WindowSize->{720, 799},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 6, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 67717, 1668, 2341, "Input"],
Cell[68300, 1692, 829, 16, 60, "Message"],
Cell[69132, 1710, 829, 16, 60, "Message"],
Cell[69964, 1728, 831, 16, 60, "Message"],
Cell[70798, 1746, 759, 15, 24, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71594, 1766, 1522, 44, 148, "Input"],
Cell[73119, 1812, 3818, 68, 384, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76974, 1885, 1469, 40, 148, "Input"],
Cell[78446, 1927, 3542, 66, 606, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82025, 1998, 308, 6, 28, "Input"],
Cell[82336, 2006, 1080, 29, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83453, 2040, 2114, 61, 148, "Input"],
Cell[85570, 2103, 3930, 71, 664, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89537, 2179, 407, 9, 46, "Input"],
Cell[89947, 2190, 112, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90096, 2196, 209, 4, 28, "Input"],
Cell[90308, 2202, 1033, 28, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91378, 2235, 2265, 63, 199, "Input"],
Cell[93646, 2300, 9100, 233, 248, "Output"],
Cell[102749, 2535, 284, 6, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103070, 2546, 1045, 29, 97, "Input"],
Cell[104118, 2577, 212, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104367, 2587, 3710, 96, 318, "Input"],
Cell[108080, 2685, 21332, 426, 254, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129449, 3116, 553, 18, 46, "Input"],
Cell[130005, 3136, 894, 17, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130936, 3158, 3172, 77, 250, "Input"],
Cell[134111, 3237, 2921, 61, 516, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137069, 3303, 453, 8, 28, "Input"],
Cell[137525, 3313, 1149, 30, 48, "Output"]
}, Open  ]],
Cell[138689, 3346, 5695, 150, 539, "Input"],
Cell[CellGroupData[{
Cell[144409, 3500, 1395, 38, 114, "Input"],
Cell[145807, 3540, 35206, 935, 28, "Output"]
}, Open  ]],
Cell[181028, 4478, 93, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[181146, 4483, 2916, 79, 182, "Input"],
Cell[184065, 4564, 3349, 59, 439, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
